suite: helm_lib_csi_node_value definition
templates:
  - helm_lib_csi_node_value.yaml
tests:
  - it: renders initContainer when data provided

    set:
      global:
        modules:
          placement: {}
        forceCsiNodeAndStaticNodesDepoloy: true
        modulesImages:
          registry:
            base: "deckhouse.io/deckhouse/ce"
          digests:
            common:
              csiNodeDriverRegistrar125: csiNodeDriverRegistrar125
        discovery:
          kubernetesVersion: "1.25"
      _testvalues:
        nodeImage: nodeImage
        driverFQDN: driverFQDN
        additionalNodeEnvs:
          - name: testEnv
            value: testValue
        additionalNodeArgs:
          - --start
        additionalNodeVolumes: {}
        additionalNodeVolumeMounts: {}
        initContainers:
          - name: init-container-name
            command:
              - command
            imagePullPolicy: IfNotPresent
            image: initContainerImage

    asserts:
      - containsDocument:
          kind: DaemonSet
          apiVersion: apps/v1
          name: csi-node
          namespace: d8-test-module

      - equal:
          path: "spec.template.spec.initContainers[0].image"
          value: initContainerImage

      - equal:
          path: "spec.template.spec.initContainers[0].command"
          value:
            - command

      - equal:
          path: "spec.template.spec.initContainers[0].name"
          value: init-container-name

  - it: contains params according values

    set:
      global:
        modules:
          placement: {}
        forceCsiNodeAndStaticNodesDepoloy: true
        modulesImages:
          registry:
            base: "deckhouse.io/deckhouse/ce"
          digests:
            common:
              csiNodeDriverRegistrar125: csiNodeDriverRegistrar125
        discovery:
          kubernetesVersion: "1.25"
      _testvalues:
        nodeImage: nodeImage
        driverFQDN: driverFQDN
        additionalNodeEnvs:
          - name: testEnv
            value: testValue
        additionalNodeArgs:
          - --start
        additionalNodeVolumes: {}
        additionalNodeVolumeMounts: {}
        initContainers:
          - name: init-container-name
            command:
              - command
            imagePullPolicy: IfNotPresent
            image: initContainerImage

    asserts:
      - equal:
          path: "spec.template.spec.initContainers[0].image"
          value: initContainerImage

      - equal:
          path: "spec.template.spec.initContainers[0].command"
          value:
            - command

      - equal:
          path: "spec.template.spec.initContainers[0].name"
          value: init-container-name
